version: '3.3'

services:

  postgres:
    container_name: postgres-n8n
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    networks:
      - postgres-n8n
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./initdata/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    container_name: n8n
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - N8N_PATH
      - NODE_ENV=production
      - N8N_HOST=${DOMAIN_NAME}
      - WEBHOOK_URL=https://${DOMAIN_NAME}
      - N8N_PROTOCOL=https
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-n8n
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - nginx
      - postgress-n8n
    env_file:
      - .env
    depends_on:
      - postgres

networks:
  nginx:
    external: true
  postgres-n8n:
    external: true
